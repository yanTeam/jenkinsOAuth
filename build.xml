<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="javaDemo">
	<!-- The directory containing source code -->
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="lib.dir" value="lib" />
	<property name="report.dir" value="junit" />
	<property name="resource.dir" value="resource" />
	<!-- Temporary build directories -->
	<property name="build.dir" value="bin" />


	<!-- The directory to store .Jar -->
	<property name="jar.dir" value="store" />

	<property name="debuglevel" value="source,lines,vars" />

	<!-- classpath -->
	<path id="classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="${lib.dir}" includes="**/*" />
		<fileset dir="${build.dir}" includes="**/*" />
	</path>

	<!-- target to create the bin directories prior to the compile target. -->
	<target name="clean" description="removes all generated files.">
		<delete dir="${report.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${build.dir}" />
		<!--<copy includeemptydirs="false" todir="bin"> <fileset dir="src"> <exclude 
			name="**/*.java" /> </fileset> </copy> <copy includeemptydirs="false" todir="bin"> 
			<fileset dir="test"> <exclude name="**/*.java" /> </fileset> </copy> -->
	</target>

	<target name="compile" depends="init">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="${build.dir}" includeantruntime="false">
			<src path="${src.dir}" />
			<src path="${test.dir}" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="junit" depends="compile">
		<mkdir dir="${report.dir}" />
		<junit printsummary="yes" haltonfailure="no" showoutput="yes">
			<classpath>
				<path refid="classpath" />
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${report.dir}">
				<fileset dir="${test.dir}" includes="**/*.java" />
			</batchtest>
		</junit>

		

		<!-- generate report with junitreport -->
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}" />
			<report todir="${report.dir}" />
		</junitreport>

		<!-- concat the report through a filter chain to extract what you want -->
		<concat>
			<fileset file="${report.dir}/overview-summary.html" />
			<filterchain>
				<linecontainsregexp>
					<regexp pattern='title="Display all tests"' />
				</linecontainsregexp>
				<tokenfilter>
					<replaceregex pattern='&lt;td&gt;&lt;a href="all-tests.html" title="Display all tests"&gt;(\d+)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="alltests-fails.html" title="Display all failures"&gt;(\d+)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="alltests-errors.html" title="Display all errors"&gt;(\d+).*$' replace="Run: \1, Failed: \2, Errors: \3" />
				</tokenfilter>
			</filterchain>
		</concat>

		<fail message="test failed" if="test.failure" />
	</target>



	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${ant.project.name}.jar">

			<fileset dir="${build.dir}">
				<include name="**/*.*" />
				<exclude name="**/*Test*" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.*" />
			</fileset>
			<fileset dir="${resource.dir}">
				<include name="*.*" />
			</fileset>
		</jar>
	</target>

	<target name="build" depends="junit" />
</project>